(window.webpackJsonp=window.webpackJsonp||[]).push([[420],{556:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return d}));var n=a(2),r=a(9),i=(a(0),a(629)),o={id:"1_wizfi250_evaluation_board",title:"1.WizFi250 Evaluation Board",date:new Date("2020-04-24T00:00:00.000Z")},c={id:"Product/Wi-Fi-Module/WizFi250/Quick-Start-Guide/1_wizfi250_evaluation_board",title:"1.WizFi250 Evaluation Board",description:"## WizFi250 Evaluation Board",source:"@site/docs/Product/Wi-Fi-Module/WizFi250/Quick-Start-Guide/1.WizFi250_Evaluation_Board.md",permalink:"/document_framework/docs/Product/Wi-Fi-Module/WizFi250/Quick-Start-Guide/1_wizfi250_evaluation_board",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Product/Wi-Fi-Module/WizFi250/Quick-Start-Guide/1.WizFi250_Evaluation_Board.md",sidebar:"someSidebar",previous:{title:"Appendix",permalink:"/document_framework/docs/Product/Wi-Fi-Module/WizFi250/Programers-Guide/appendix"},next:{title:"2.Start Serial to Wi-Fi",permalink:"/document_framework/docs/Product/Wi-Fi-Module/WizFi250/Quick-Start-Guide/2_start_serial_to_wi_fi"}},b=[{value:"WizFi250 Evaluation Board",id:"wizfi250-evaluation-board",children:[{value:"Feature Identification",id:"feature-identification",children:[]},{value:"Interface Description",id:"interface-description",children:[]},{value:"Interface Board PIN Map",id:"interface-board-pin-map",children:[]},{value:"Interface Board Dimension",id:"interface-board-dimension",children:[]}]}],l={rightToc:b};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"wizfi250-evaluation-board"},"WizFi250 Evaluation Board"),Object(i.b)("p",null,"The WizFi250 EVB is the evaluation board for testing WizFi250 and prototyping development. WizFi250 EVB is composed of a WizFi250 evaluation board and a WizFi250 module."),Object(i.b)("h3",{id:"feature-identification"},"Feature Identification"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"/document_framework/img/products/wizfi250/wizfi250qsg/wizfi250qsg-1.png",alt:null}))," "),Object(i.b)("h4",{id:"button-description"},"Button Description"),Object(i.b)("hr",null),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"th"},"WizFi250 Reset")),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Through this button, user can restart WizFi250 module."))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"Function")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Through the function button, user can enter specific mode without AT Command.\u2666 Factory Recovery : When doing Boot or Reset, press the button over 3.5 seconds\u2666 AP Mode : When module is working, press it once.\u2666 OTA Mode : When module is working, press it twice.\u2666 Factory Default : When module is working, press it three times.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("strong",{parentName:"td"},"Arduino Board Reset")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"With this button, user can restart Arduino board")))),Object(i.b)("h4",{id:"led-description"},"LED Description"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null})))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"UART RX/TX"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Indicate UART RX/TX Status")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Power LED"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Indicate Power On/Off of WizFi250")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Mode LED"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Indicate Data/Command Mode \u2666 LOW(ON) : Data Mode \u2666 HIGH(OFF) : Command Mode")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Wi-Fi LED"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Indicate Wi-Fi Association \u2666 LOW(ON) : Wi-Fi is associated \u2666 HIGH(OFF) : Wi-Fi is not associated")))),Object(i.b)("h4",{id:"pin-description"},"Pin Description"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null})))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"BOOT"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Enter boot mode \u2666 SHORT : Start in boot mode \u2666 OPEN : Start in application mode")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"5V Power"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Alternative choice for 5V power supply")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GPIO Pin"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Through this pin, user can use GPIO signal")))),Object(i.b)("h3",{id:"interface-description"},"Interface Description"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null})),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null})))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"UART1 Interface"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Alternative choice for Serial interface.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SPI Interface"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Through these pins, user can control SPI interface.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"USB Interface"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"This provides power supply & Serial interface Default serial information:\u2666 Baud rate : 115200 \u2666 Data rate : 8 \u2666 Stop bits : 1 \u2666 Parity : None \u2666 Flow control : None")))),Object(i.b)("h3",{id:"interface-board-pin-map"},"Interface Board PIN Map"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"/document_framework/img/products/wizfi250/wizfi250qsg/wizfi250_interface_board_bottom_pin_map.png",alt:null}))," "),Object(i.b)("h3",{id:"interface-board-dimension"},"Interface Board Dimension"),Object(i.b)("p",null,Object(i.b)("img",Object(n.a)({parentName:"p"},{src:"/document_framework/img/products/wizfi250/wizfi250qsg/wizfi250_interface_board_dimension.png",alt:null}))," "))}d.isMDXComponent=!0},629:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),d=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):c({},t,{},e)),a},u=function(e){var t=d(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),u=d(a),O=n,m=u["".concat(o,".").concat(O)]||u[O]||p[O]||i;return a?r.a.createElement(m,c({ref:t},l,{components:a})):r.a.createElement(m,c({ref:t},l))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=O;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var l=2;l<i;l++)o[l]=a[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);