(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{249:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return l}));var r=n(1),i=n(9),o=(n(0),n(404)),a={id:"overview",title:"Overview",date:"2020-03-"},c={id:"Product/iMCU/W7500/overview",title:"Overview",description:"## Content\r",source:"@site/docs\\Product\\iMCU\\W7500\\Overview.md",permalink:"/document_framework/docs/Product/iMCU/W7500/overview",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Product/iMCU/W7500/Overview.md",sidebar:"someSidebar",previous:{title:"Overview",permalink:"/document_framework/docs/overview"},next:{title:"Pin Assignment",permalink:"/document_framework/docs/Product/iMCU/W7500/pin_assignment"}},p=[{value:"Content",id:"content",children:[]}],b={rightToc:p};function l(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"content"},"Content"),Object(o.b)("p",null,"\\<markdown",">"),Object(o.b)("p",null,"#","W7500 ","!","[","Figure 1 W7500\nChip","]","(",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"http://wizwiki.net/wiki/lib/exe/fetch.php?media=products:w7500:w7500_chip.png"}),"http://wizwiki.net/wiki/lib/exe/fetch.php?media=products:w7500:w7500_chip.png"),'\n"Figure 1 W7500 Chip")'),Object(o.b)("hr",null),Object(o.b)("p",null,"The IOP4IoT W7500 chip is the one-chip solution which integrates an ARM\nCortex-M0, 128KB Flash and hardwired TCP/IP core for various embedded\napplication platform, especially internet of things. The TCP/IP core is\na market-proven hardwired TCP/IP stack with an integrated Ethernet MAC.\nThe Hardwired TCP/IP stack supports the TCP, UDP, IPv4, ICMP, ARP, IGMP\nand PPPoE which has been used in various applications for more than 15\nyears. W7500 suits users who need Internet connectivity best."),Object(o.b)("p",null,"#","#","Features ","*"," ARM Cortex-M0"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"48MHz maximum frequency")),Object(o.b)("p",null,"*"," Hardwired TCP/IP Core"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"  * 8 Sockets\n  * SRAM for socket: 32 KB\n  * MII (Medium-Independent Interface)\n")),Object(o.b)("p",null,"*"," Memories"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Flash: 128 KB"),Object(o.b)("li",{parentName:"ul"},"SRAM: 16 KB"),Object(o.b)("li",{parentName:"ul"},"ROM for boot code: 6 KB")),Object(o.b)("p",null,"*"," Clock, reset and supply management"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"  * POR (Power-On Reset)\n  * Internal Voltage Regulator : 3.3V to 1.5V\n  * 8-to-24MHz external crystal oscillator\n  * Internal 8MHz RC Oscillator\n  * PLL for CPU clock\n")),Object(o.b)("p",null,"*"," ADC : 12bit, 8ch, 1Mbps ","*"," DMA"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"  * 6-channel DMA controller\n  * Peripheral supported: UARTs, SPIs\n")),Object(o.b)("p",null,"*"," GPIO"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"  * 53 I/Os (16 IO x 3ea, 5 IO x 1ea)\n")),Object(o.b)("p",null,"*"," Debug mode"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"  * Serial Wire Debug (SWD)\n")),Object(o.b)("p",null,"*"," Timer/PWM"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"  * 1 Watchdog (32-bit down-counter)\n  * 4 Timers (32-bit or 16-bit down-counter)\n  * 8 PWMs (32-bit counter/timers with programmable 6-bit prescaler)\n")),Object(o.b)("p",null,"*"," Communication Interfaces"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"  * 3 UART (2 UARTs with FIFO and Flow Control, 1 simple UART)\n  * 2 SPI\n  * 2 I2C (Master/Slave, Fast-mode (400 kbps))\n")),Object(o.b)("p",null,"*"," Crypto"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"  * 1 RNG (Random Number Generator): 32-bit random number\n")),Object(o.b)("p",null,"*"," Package"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"  * 64 TQFP (7x7 mm)\n")),Object(o.b)("p",null,"#","#","Details - ","[","Pin\nAssignment","]","(",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"http://wizwiki.net/wiki/doku.php?id=products:w7500:overview:pinmap"}),"http://wizwiki.net/wiki/doku.php?id=products:w7500:overview:pinmap"),")"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"[","System and\nMemory","]","(",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"http://wizwiki.net/wiki/doku.php?id=products:w7500:overview:systemandmemory"}),"http://wizwiki.net/wiki/doku.php?id=products:w7500:overview:systemandmemory"),")"),Object(o.b)("li",{parentName:"ul"},"[","Interrupt and\nEvents","]","(",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"http://wizwiki.net/wiki/doku.php?id=products:w7500:overview:intandevents"}),"http://wizwiki.net/wiki/doku.php?id=products:w7500:overview:intandevents"),")"),Object(o.b)("li",{parentName:"ul"},"[","Power\nsupply","]","(",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"http://wizwiki.net/wiki/doku.php?id=products:w7500:overview:powersupply"}),"http://wizwiki.net/wiki/doku.php?id=products:w7500:overview:powersupply"),")"),Object(o.b)("li",{parentName:"ul"},"[","Booting\nSequence","]","(",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"http://wizwiki.net/wiki/doku.php?id=products:w7500:overview:booting"}),"http://wizwiki.net/wiki/doku.php?id=products:w7500:overview:booting"),")"),Object(o.b)("li",{parentName:"ul"},"[","Electrical\nCharacteristics","]","(",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"http://wizwiki.net/wiki/doku.php?id=products:w7500:overview:electric"}),"http://wizwiki.net/wiki/doku.php?id=products:w7500:overview:electric"),")"),Object(o.b)("li",{parentName:"ul"},"[","W7500\nRef.Schematic","]","(",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"http://wizwiki.net/wiki/doku.php?id=products:w7500:ref_sch"}),"http://wizwiki.net/wiki/doku.php?id=products:w7500:ref_sch"),")\n\\</markdown",">")))}l.isMDXComponent=!0},404:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return w}));var r=n(0),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var b=i.a.createContext({}),l=function(e){var t=i.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},u=function(e){var t=l(e.components);return i.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},s=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,b=p(e,["components","mdxType","originalType","parentName"]),u=l(n),s=r,w=u["".concat(a,".").concat(s)]||u[s]||d[s]||o;return n?i.a.createElement(w,c({ref:t},b,{components:n})):i.a.createElement(w,c({ref:t},b))}));function w(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=s;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var b=2;b<o;b++)a[b]=n[b];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);